"use strict";(self.webpackChunkegoexo_docs=self.webpackChunkegoexo_docs||[]).push([[430],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,f=c["".concat(s,".").concat(u)]||c[u]||d[u]||i;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9537:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const i={title:"Takes",sidebar_position:1},o=void 0,l={unversionedId:"data/takes",id:"data/takes",title:"Takes",description:"The dataset was recorded in a single recording session called a capture, each",source:"@site/docs/data/takes.md",sourceDirName:"data",slug:"/data/takes",permalink:"/data/takes",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Takes",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Metadata",permalink:"/data/metadata"},next:{title:"MPS",permalink:"/data/mps"}},s={},m=[{value:"Capture-Level Information",id:"capture-level-information",level:2},{value:"Timesync",id:"timesync",level:3},{value:"Take-Timing Information",id:"take-timing-information",level:3}],p={toc:m},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The dataset was recorded in a single recording session called a ",(0,r.kt)("em",{parentName:"p"},"capture"),", each\ncapture contains multiple ",(0,r.kt)("em",{parentName:"p"},"takes")," corresponding to a single activity. Data is\ntrimmed (cropped temporally) to each take."),(0,r.kt)("p",null,"The following describes the data that is trimmed at the take-level (& how to download it via the ",(0,r.kt)("a",{parentName:"p",href:"/download"},"CLI"),"):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Frame aligned videos (",(0,r.kt)("inlineCode",{parentName:"li"},"--parts takes"),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For each camera, there is an MP4 video file where each frame ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"i")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"))))),"\ncorrespond to the same point in time for all cameras."),(0,r.kt)("li",{parentName:"ul"},"Downscaled versions of these are available, see ",(0,r.kt)("a",{parentName:"li",href:"/data/downscaled_takes"},"Downscaled Takes")))),(0,r.kt)("li",{parentName:"ul"},"VRS files",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Aria (egocentric camera used) records with the VRS file format. These are available as trimmed takes."),(0,r.kt)("li",{parentName:"ul"},"This VRS file includes camera intrinics, IMU, audio data and optionally image stream data (RGB camera, left/right slam cameras)"),(0,r.kt)("li",{parentName:"ul"},"If a VRS file is suffixed with ",(0,r.kt)("inlineCode",{parentName:"li"},"_noimagestreams")," then this VRS file will not contain image stream data (as the name suggests)"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"--parts takes")," to download VRS files without image stream data and ",(0,r.kt)("inlineCode",{parentName:"li"},"--parts take_vrs")," for VRS files with image stream data"))),(0,r.kt)("li",{parentName:"ul"},"Trajectory (",(0,r.kt)("inlineCode",{parentName:"li"},"--parts take_trajectory"),") ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use this data to get the 3D location of the camera wearer at each point in time "),(0,r.kt)("li",{parentName:"ul"},"Note: since this data is sampled at 1kHZ (due to IMU), to perform\nmatching: we recommend rounding the time (in nanoseconds) for the frame\nto the nearest time stamp in the trajectory file"),(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("a",{parentName:"li",href:"/data/mps#trajectory"},"MPS")))),(0,r.kt)("li",{parentName:"ul"},"Eye gaze (",(0,r.kt)("inlineCode",{parentName:"li"},"--parts takes"),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Similar to trajectory, but for eye gaze. See ",(0,r.kt)("a",{parentName:"li",href:"/data/mps#eye-gaze"},"MPS")))),(0,r.kt)("li",{parentName:"ul"},"Audio",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This is available in the frame aligned videos (for each camera) & VRS files for the egocentric camera (7 microphones) (see above)")))),(0,r.kt)("h2",{id:"capture-level-information"},"Capture-Level Information"),(0,r.kt)("p",null,"Within each capture, the following information is present."),(0,r.kt)("h3",{id:"timesync"},"Timesync"),(0,r.kt)("p",null,"Timesync information is present for each capture when downloading via ",(0,r.kt)("inlineCode",{parentName:"p"},"--parts captures"),". This data is available as ",(0,r.kt)("inlineCode",{parentName:"p"},"capture/<capture_name>/timesync.csv"),"."),(0,r.kt)("p",null,"The timesync information is present as a CSV file. Where each row in the CSV file\ndescribes a matching timestamp & frame number for each camera. "),(0,r.kt)("p",null,"The columns of the CSV file are of the format ",(0,r.kt)("inlineCode",{parentName:"p"},"<cam_id>_pts")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"<cam_id>_frame_number")," for the Presentation Time-Stamp (PTS) and frame number\nrespectively."),(0,r.kt)("h3",{id:"take-timing-information"},"Take-Timing Information"),(0,r.kt)("p",null,"Take-timing information is present under the file ",(0,r.kt)("inlineCode",{parentName:"p"},"take_timings.csv"),", which\nincludes the following columns ",(0,r.kt)("inlineCode",{parentName:"p"},"take_id"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"start_idx")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end_idx")," (inclusive).\n",(0,r.kt)("inlineCode",{parentName:"p"},"start_idx")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end_idx")," are indices into the timesync file."))}d.isMDXComponent=!0}}]);